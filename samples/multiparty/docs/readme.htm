<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<title>Multiparty Conference Sample</title>
</head>
<body style="font-family: Tahoma; font-size:10pt">
<table width="100%" border="0" cellspacing="10">
  <tr>
    <td colspan="3" align="center"><H2>Multiparty Conference Sample</H2></td>
  </tr>
  <tr>
    <td colspan="3"><hr>
    </td>
  </tr>
</table>
<!----------------- Beginning of the Content ---------------------->
<h2>Overview</h2>
<blockquote>
	<p>This sample application demonstrates how to write a SIP servlet using JSR-309 API to work with media server. </p>
	<p>ConferenceServlet is a multiparty conference service, there are several conferences, each of them has a unique conference id. Callers enter the same conference id are conferenced together. Everybody can talk/listen.</p>
	
	<p align="left"><img src="images/multiparty.jpg"></p>
</blockquote><br>
<h2>Understanding the Sample</h2>
<blockquote>
<p>On receipt of the INVITE, ConferenceServlet will create a <code>Participant</code>, which owns a MediaSession, a MediaGroup , a MixerAdapter, and of course a NetworkConnection. The <code>Participant</code> will create a NetworkConnection and a MediaGroup, join them together in DUPLEX direction. Then request the media server to process the given SDP offer (from the remote User Agent). Once SDP negotiation is complete, <code>Participant</code> will tell ConferenceServlet to send back SIP/200OK to the remote User Agent. </p>
<p>On receipt of the ACK, <code>Participant</code> begins to play a prompt to tell the caller to input the conference id. Once the conference id is received, <code>Participant</code> will create a MediaMixer for the specified conference id, then play another prompt to tell the caller to speak out his name, and record what the media server received into a specified file. Once the record operation is complete, <code>Participant</code> will create a MixerAdapter, and join the NetworkConnection to the MixerAdapter in DUPLEX direction. As a result, the remote User Agent can talke to/listen from the conference. During the conferencing, the caller can decide whether to volume down, volume up or mute/unmute himself by inputing different signals. </p>
<p>When ConferenceServlet receives BYE message, this remote User Agent will leave the conference, and the MediaSession associated with the <code>Participant</code> will be released.</p>
<p>For more details, please see <a href="../../mscontrol-samples/multiparty">source codes</a>. </p>

<p>The Media Server location can be configured via sipmethod.xml which can be found in folder <em>$SM_HOME/conf</em>, as shown in the following.</p>
<p>
<pre><code>
   &lt;MediaControl MEDIA_SERVER_URI="mrcp://127.0.0.1:9974" VCM_SERVER_URI="http://127.0.0.1:9995;virtualPlatformId=Default"
        VXML_BROWSER_URI="sip://127.0.0.1:5066;transport=tcp"/&gt;
</code></pre>
</p>
<blockquote>
  <table border="0">
    <tr> 
      <td width="30%"><font size="2"><strong>Attribute</strong></font></td>
      <td width="30%"><font size="2"><strong>Description</strong></font></td>
    </tr>
    <tr> 
      <td width="30%"><font size="2">MEDIA_SERVER_URI</font></td>
      <td width="30%"><font size="2">URI of Media Server</font></td>
    </tr>
    <tr> 
      <td width="30%"><font size="2">VCM_SERVER_URI</font></td>
      <td width="30%"><font size="2">URI of Voxeo Conference Manager</font></td>
    </tr>
    <tr> 
      <td width="30%"><font size="2">VXML_BROWSER_URI</font></td>
      <td width="30%"><font size="2">URI of Voice XML Browser</font></td>
    </tr>
  </table>
</blockquote>
</blockquote><br>

<h2>Running the Sample</h2>
<blockquote>
  <p>The top level directories and files in this sample are:</p>
  <table width="100%" border="0" align="center">
    <tr> 
    	<td width="10%"></td>
      <td><font size="2">docs/</font></td>
      <td><font size="2">the documentation about this sample </font></td>
    </tr>
    <tr> 
	    <td></td>
      <td><font size="2">multiparty.sar</font></td>
      <td align="left"><font size="2">the application archive file (SAR) </font></td>
    </tr>
    <tr> 
	  <td></td>
      <td><font size="2">multiparty/</font></td>
      <td><font size="2">the exploded application directory </font></td>
    </tr>
  </table>
	<p>Please follow the following steps to deploy, configure and run this sample:</p>
	<ol>
	<li>Start Voxeo Prism Media Server if you haven't. </li>
	<br>
	<li>Copy <em>multiparty</em> directory (or <em>multiparty.sar</em>) into <em><a href="../../../apps">apps</a></em> directory.</li>
	<br>
	<li>Use UA(e.g. X-Lite) to make the call to server. You should configure the domain of the callee as multiparty.sample.prism.voxeo.com. You should configure your XLite to send outbound via proxy. By default, the proxy Address of your XLite configuration should be "127.0.0.1:5060" if the User Agent is on the same machine as SIPMethod Application Server, and the SIP listening port of SIPMethod server is 5060.</li>
	<br>
	</ol>
</blockquote><br>
<br>
<!--------------End of the Content ----------------------->
<table width="100%">
  <tr>
    <td colspan="3"><hr>
    </td>
  </tr>
</table>
</body>
